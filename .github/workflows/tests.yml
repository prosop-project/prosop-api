name: Unit Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php-version: [8.2, 8.3, 8.4]
        laravel: [11]
        dependency-version: [prefer-lowest, prefer-stable]

    name: Tests PHP${{ matrix.php-version }} - Laravel v${{ matrix.laravel }}
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_DB: testing_db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U user -d testing_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup PHP Environment
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: pdo, pdo_pgsql, dom, mbstring, zip
          coverage: none

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php-version }}-L${{ matrix.laravel }}-${{ matrix.dependency-version }}-composer-${{ hashFiles('composer.json') }}

      - name: Install Composer Dependencies
        run: composer install --no-interaction --no-scripts --no-progress --prefer-dist --${{ matrix.dependency-version }} || composer install --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Set Environment Variables
        run: |
          echo "DB_CONNECTION=pgsql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=5432" >> .env
          echo "DB_DATABASE=testing_db" >> .env
          echo "DB_USERNAME=user" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit --log-junit phpunit-report.xml

      - name: Upload PHPUnit Report
        uses: actions/upload-artifact@v4
        with:
          name: phpunit-report-php${{ matrix.php-version }}-laravel-${{ matrix.laravel }}-${{ matrix.dependency-version }}
          path: phpunit-report.xml
